<?php

/**
 * @file
 * Install file for privatemsg.module
 */

/**
 * Implements hook_schema().
 */
function privatemsg_schema() {
  $schema = array();
  $schema['pm_index'] = array(
    'description' => '{pm_index} holds indexing information about messages and recipients for fast retrieval',
    'fields' => array(
      'mid' => array(
        'description' => 'Private Message ID',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'thread_id' => array(
        'description' => 'Messages thread ID',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'recipient' => array(
        'description' => 'ID of the recipient object, typically user',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'is_new' => array(
        'description' => 'Whether the user has read this message',
        'type' => 'int',
        'default' => 1,
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'deleted' => array(
        'description' => 'Whether the user has deleted this message',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'type' => array(
        'description' => 'Type of recipient object',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'user'
      ),
    ),
    'primary key' => array('mid', 'recipient', 'type'),
    'indexes' => array(
      'list' => array('recipient', 'type', 'deleted', 'is_new'),
      'messages' => array('mid', 'recipient', 'type'),
      'participants' => array('thread_id', 'recipient', 'type', 'deleted'),
    ),
  );

  $schema['pm_message'] = array(
    'description' => '{pm_messages} holds the message information',
    'fields' => array(
      'mid' => array(
        'description' => 'Private Message ID',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'author' => array(
        'description' => 'UID of the author',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'subject' => array(
        'description' => 'Subject text of the message',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'body' => array(
        'description' => 'Body of the message',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'format' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The {filter_formats}.format of the message text.',
      ),
      'timestamp' => array(
        'description' => 'Time when the message was sent',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'has_tokens' => array(
        'description' => 'Indicates if the message has tokens',
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('mid'),
  );

  $schema['pm_disable'] = array(
    'description' => '{pm_disable} holds the list of users that have disabled private messaging',
    'fields' => array(
      'uid' => array(
        'description' => 'ID of the user',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('uid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function privatemsg_install() {
  // Define default formats for date format types.
  config_set('system.date', 'formats.date_format_privatemsg_current_day.pattern', 'g:i a');
  config_set('system.date', 'formats.date_format_privatemsg_current_day.label', 'Pmsg current day');
  config_set('system.date', 'formats.date_format_privatemsg_current_year.pattern', 'M j');
  config_set('system.date', 'formats.date_format_privatemsg_current_year.label', 'Pmsg current year');
  config_set('system.date', 'formats.date_format_privatemsg_years.pattern', 'n/j/y');
  config_set('system.date', 'formats.date_format_privatemsg_years.label', 'Pmsg years');
}


function privatemsg_update_1000() {
  $config = config('privatemsg.settings');
  $config->set('private_message_view_template', update_variable_get('private_message_view_template'));
  $config->set('privatemsg_display_loginmessage', update_variable_get('privatemsg_display_loginmessage'));
  $config->set('privatemsg_display_disabled_message', update_variable_get('privatemsg_display_disabled_message'));
  $config->set('privatemsg_default_redirect', update_variable_get('privatemsg_default_redirect'));
  $config->set('privatemsg_default_redirect_reply', update_variable_get('privatemsg_default_redirect_reply'));

  $config->set('privatemsg_display_preview_button', update_variable_get('privatemsg_display_preview_button'));
  $config->set('privatemsg_flush_enabled', update_variable_get('privatemsg_flush_enabled'));
  $config->set('privatemsg_flush_days', update_variable_get('privatemsg_flush_days'));
  $config->set('privatemsg_flush_max', update_variable_get('privatemsg_flush_max'));
  $config->set('privatemsg_per_page', update_variable_get('privatemsg_per_page'));

  $config->set('privatemsg_display_fields', update_variable_get('privatemsg_display_fields'));
  $config->set('privatemsg_view_max_amount', update_variable_get('privatemsg_view_max_amount'));
  $config->set('privatemsg_view_use_max_as_default', update_variable_get('privatemsg_view_use_max_as_default'));
  $config->set('privatemsg_view_default_amount', update_variable_get('privatemsg_view_default_amount'));
  $config->set('privatemsg_display_link_self', update_variable_get('privatemsg_display_link_self'));

  $config->set('privatemsg_display_profile_links', update_variable_get('privatemsg_display_profile_links'));
  $config->set('privatemsg_link_node_types', update_variable_get('privatemsg_link_node_types'));
  $config->set('privatemsg_display_on_teaser', update_variable_get('privatemsg_display_on_teaser'));
  $config->set('privatemsg_display_on_comments', update_variable_get('privatemsg_display_on_comments'));
  $config->set('privatemsg_filter_inbox_tag', update_variable_get('privatemsg_filter_inbox_tag'));

  $config->set('privatemsg_cron_recipient_per_run', update_variable_get('privatemsg_cron_recipient_per_run'));
  $config->set('privatemsg_cron_recipient_process', update_variable_get('privatemsg_cron_recipient_process'));
  $config->set('privatemsg_no_messages_notification', update_variable_get('privatemsg_no_messages_notification'));
  $config->set('privatemsg_recipient_small_threshold', update_variable_get('privatemsg_recipient_small_threshold'));
  $config->set('pm_block_user_actions', update_variable_get('pm_block_user_actions'));

  $config->set('pm_email_notify_subject', update_variable_get('pm_email_notify_subject'));
  $config->set('pm_email_notify_body', update_variable_get('pm_email_notify_body'));
  $config->set('pm_email_notify_default', update_variable_get('pm_email_notify_default'));
  $config->set('pm_email_notify_from', update_variable_get('pm_email_notify_from'));
  $config->save();

  // Delete variables.
  update_variable_del('private_message_view_template');
  update_variable_del('privatemsg_display_loginmessage');
  update_variable_del('privatemsg_display_disabled_message');
  update_variable_del('privatemsg_default_redirect');
  update_variable_del('privatemsg_default_redirect_reply');

  update_variable_del('privatemsg_display_preview_button');
  update_variable_del('privatemsg_flush_enabled');
  update_variable_del('privatemsg_flush_days');
  update_variable_del('privatemsg_flush_max');
  update_variable_del('privatemsg_per_page');

  update_variable_del('privatemsg_display_fields');
  update_variable_del('privatemsg_view_max_amount');
  update_variable_del('privatemsg_view_use_max_as_default');
  update_variable_del('privatemsg_view_default_amount');
  update_variable_del('privatemsg_display_link_self');

  update_variable_del('privatemsg_display_profile_links');
  update_variable_del('privatemsg_link_node_types');
  update_variable_del('privatemsg_display_on_teaser');
  update_variable_del('privatemsg_display_on_comments');
  update_variable_del('privatemsg_filter_inbox_tag');

  update_variable_del('privatemsg_cron_recipient_per_run');
  update_variable_del('privatemsg_cron_recipient_process');
  update_variable_del('privatemsg_no_messages_notification');
  update_variable_del('privatemsg_recipient_small_threshold');
  update_variable_del('pm_block_user_actions');

  update_variable_del('pm_email_notify_subject');
  update_variable_del('pm_email_notify_body');
  update_variable_del('pm_email_notify_default');
  update_variable_del('pm_email_notify_from');
}


/**
 * Implements hook_update_last_removed().
 */
function privatemsg_update_last_removed() {
  return 7006;
}
